<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Mock_project1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Mock_project1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Fri Oct  4 00:44:39 2024
<BR><P>
<H3>Maximum Stack Usage =        468 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
LPUART1_RxTx_IRQHandler &rArr; ParseUARTStringToTimeDate &rArr; MAX7219_DisplayDate &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[85]">DefaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85]">DefaultISR</a><BR>
 <LI><a href="#[31]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[31]">ADC0_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[32]">ADC1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[59]">CAN0_Error_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[5b]">CAN0_ORed_0_15_MB_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[5c]">CAN0_ORed_16_31_MB_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[58]">CAN0_ORed_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[5a]">CAN0_Wake_Up_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[60]">CAN1_Error_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[62]">CAN1_ORed_0_15_MB_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[5f]">CAN1_ORed_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[67]">CAN2_Error_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[69]">CAN2_ORed_0_15_MB_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[66]">CAN2_ORed_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[33]">CMP0_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[a]">DMA0_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[14]">DMA10_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[15]">DMA11_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[16]">DMA12_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[17]">DMA13_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[18]">DMA14_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[19]">DMA15_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[b]">DMA1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[c]">DMA2_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[d]">DMA3_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[e]">DMA4_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[f]">DMA5_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[10]">DMA6_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[11]">DMA7_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[12]">DMA8_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[13]">DMA9_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[1a]">DMA_Error_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[85]">DefaultISR</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[37]">ERM_double_fault_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[36]">ERM_single_fault_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[4f]">FLEXIO_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[1f]">FTFC_Fault_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[1c]">FTFC_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[6d]">FTM0_Ch0_Ch1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[6e]">FTM0_Ch2_Ch3_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[6f]">FTM0_Ch4_Ch5_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[70]">FTM0_Ch6_Ch7_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[71]">FTM0_Fault_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[72]">FTM0_Ovf_Reload_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[73]">FTM1_Ch0_Ch1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[74]">FTM1_Ch2_Ch3_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[75]">FTM1_Ch4_Ch5_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[76]">FTM1_Ch6_Ch7_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[77]">FTM1_Fault_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[78]">FTM1_Ovf_Reload_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[79]">FTM2_Ch0_Ch1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[7a]">FTM2_Ch2_Ch3_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[7b]">FTM2_Ch4_Ch5_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[7c]">FTM2_Ch6_Ch7_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[7d]">FTM2_Fault_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[7e]">FTM2_Ovf_Reload_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[7f]">FTM3_Ch0_Ch1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[80]">FTM3_Ch2_Ch3_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[81]">FTM3_Ch4_Ch5_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[82]">FTM3_Ch6_Ch7_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[83]">FTM3_Fault_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[84]">FTM3_Ovf_Reload_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[22]">LPI2C0_Master_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[23]">LPI2C0_Slave_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[3a]">LPIT0_Ch0_IRQHandler</a> from main.o(.text.LPIT0_Ch0_IRQHandler) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[3b]">LPIT0_Ch1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[3c]">LPIT0_Ch2_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[3d]">LPIT0_Ch3_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[24]">LPSPI0_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[25]">LPSPI1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[26]">LPSPI2_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[44]">LPTMR0_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[29]">LPUART0_RxTx_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[2b]">LPUART1_RxTx_IRQHandler</a> from main.o(.text.LPUART1_RxTx_IRQHandler) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[2d]">LPUART2_RxTx_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[1e]">LVD_LVW_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[1b]">MCM_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[3e]">PDB0_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[4e]">PDB1_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[45]">PORTA_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[46]">PORTB_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[47]">PORTC_IRQHandler</a> from main.o(.text.PORTC_IRQHandler) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[48]">PORTD_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[49]">PORTE_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[21]">RCM_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[38]">RTC_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[39]">RTC_Seconds_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[1d]">Read_Collision_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[5e]">Reserved100_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[61]">Reserved103_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[63]">Reserved105_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[64]">Reserved106_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[65]">Reserved107_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[68]">Reserved110_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[6a]">Reserved112_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[6b]">Reserved113_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[6c]">Reserved114_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[27]">Reserved45_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[28]">Reserved46_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[2a]">Reserved48_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[2c]">Reserved50_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[2e]">Reserved52_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[2f]">Reserved53_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[30]">Reserved54_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[34]">Reserved58_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[35]">Reserved59_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[3f]">Reserved69_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[40]">Reserved70_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[41]">Reserved71_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[42]">Reserved72_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[4b]">Reserved81_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[4c]">Reserved82_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[4d]">Reserved83_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[50]">Reserved86_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[51]">Reserved87_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[52]">Reserved88_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[53]">Reserved89_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[54]">Reserved90_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[55]">Reserved91_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[56]">Reserved92_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[57]">Reserved93_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[5d]">Reserved99_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[43]">SCG_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[4a]">SWI_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[86]">SystemInit</a> from system_s32k144.o(.text.SystemInit) referenced from startup_s32k144.o(.text)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[20]">WDOG_EWM_IRQHandler</a> from startup_s32k144.o(.text) referenced from startup_s32k144.o(RESET)
 <LI><a href="#[88]">__main</a> from __main.o(!!!main) referenced from startup_s32k144.o(.text)
 <LI><a href="#[87]">init_data_bss</a> from startup.o(.text.init_data_bss) referenced from startup_s32k144.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[88]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[c5]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[c6]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[c7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[90]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[8d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[c8]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[cb]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[cd]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[cf]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[d0]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[d1]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[d2]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[d3]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[d4]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[d5]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[d6]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[d7]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[d9]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[da]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[db]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[dc]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[95]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[dd]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[de]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[df]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[e0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[e1]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[e2]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[e3]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[8a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e4]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[e5]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[8f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[e6]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[91]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; LPSPI0_Init &rArr; CLOCK_InitSIRC &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[9c]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[94]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[e8]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[96]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DefaultISR</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CAN0_ORed_0_15_MB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>CAN0_ORed_16_31_MB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>CAN0_ORed_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CAN0_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CAN1_ORed_0_15_MB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN1_ORed_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>CAN2_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CAN2_ORed_0_15_MB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>CAN2_ORed_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>ERM_double_fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ERM_single_fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>FLEXIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FTFC_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>FTFC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>FTM0_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>FTM0_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>FTM0_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>FTM0_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>FTM0_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>FTM0_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>FTM1_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>FTM1_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>FTM1_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>FTM1_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>FTM1_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>FTM1_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>FTM2_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>FTM2_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>FTM2_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>FTM2_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>FTM2_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>FTM2_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>FTM3_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>FTM3_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>FTM3_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>FTM3_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>FTM3_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>FTM3_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LPI2C0_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LPI2C0_Slave_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>LPIT0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>LPIT0_Ch2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>LPIT0_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>LPSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>LPSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>LPSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>LPUART0_RxTx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>LPUART2_RxTx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>MCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>PDB1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>PORTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>PORTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>RCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Read_Collision_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>Reserved100_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>Reserved103_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>Reserved105_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>Reserved106_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>Reserved107_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>Reserved110_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>Reserved112_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>Reserved113_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>Reserved114_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>Reserved46_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>Reserved48_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>Reserved50_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>Reserved52_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>Reserved53_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>Reserved54_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>Reserved58_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>Reserved59_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>Reserved69_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>Reserved70_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>Reserved71_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>Reserved72_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>Reserved81_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>Reserved82_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>Reserved83_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>Reserved86_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>Reserved87_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>Reserved88_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>Reserved89_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>Reserved90_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>Reserved91_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>Reserved92_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>Reserved93_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>Reserved99_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SWI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>WDOG_EWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k144.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseUARTStringToTimeDate
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseUARTStringToTimeDate
</UL>

<P><STRONG><a name="[98]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[e9]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseUARTStringToTimeDate
</UL>

<P><STRONG><a name="[ea]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[eb]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[93]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[f1]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[9d]"></a>CLOCK_InitSIRC</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, clock.o(.text.CLOCK_InitSIRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CLOCK_InitSIRC &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI0_Init
</UL>

<P><STRONG><a name="[a2]"></a>CheckBit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, uart.o(.text.CheckBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_RxTx_IRQHandler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_SCG_SOSCCSR
</UL>

<P><STRONG><a name="[9f]"></a>Configure_SCG_SOSCCFG</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, uart.o(.text.Configure_SCG_SOSCCFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Configure_SCG_SOSCCFG &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>Configure_SCG_SOSCCSR</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, uart.o(.text.Configure_SCG_SOSCCSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Configure_SCG_SOSCCSR &rArr; CheckBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>Gpio_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gpio.o(.text.Gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI0_SetPins
</UL>

<P><STRONG><a name="[a3]"></a>Gpio_SetMode</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gpio.o(.text.Gpio_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Gpio_SetMode &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>InitializeDesiredSOSC</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, uart.o(.text.InitializeDesiredSOSC))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = InitializeDesiredSOSC &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>LPIT0_Ch0_IRQHandler</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, main.o(.text.LPIT0_Ch0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LPIT0_Ch0_IRQHandler &rArr; update_display &rArr; MAX7219_DisplayDate &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_display
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>LPIT_Configure_Channel</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lpit.o(.text.LPIT_Configure_Channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LPIT_Configure_Channel &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>LPIT_Enable_Interrupt</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lpit.o(.text.LPIT_Enable_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPIT_Enable_Interrupt &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>LPIT_Enable_Timer_Channel</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lpit.o(.text.LPIT_Enable_Timer_Channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPIT_Enable_Timer_Channel &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>LPIT_Init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lpit.o(.text.LPIT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LPIT_Init &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>LPIT_Set_Clock</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lpit.o(.text.LPIT_Set_Clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPIT_Set_Clock &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>LPIT_Set_NVIC</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, lpit.o(.text.LPIT_Set_NVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LPIT_Set_NVIC
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>LPIT_Set_Timer_Value</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, lpit.o(.text.LPIT_Set_Timer_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LPIT_Set_Timer_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>LPSPI0_Init</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, spi.o(.text.LPSPI0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LPSPI0_Init &rArr; CLOCK_InitSIRC &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitSIRC
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>LPSPI0_SetPins</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, spi.o(.text.LPSPI0_SetPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPSPI0_SetPins &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>LPSPI0_Transmit</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, spi.o(.text.LPSPI0_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LPSPI0_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_SendCommand
</UL>

<P><STRONG><a name="[c4]"></a>LPUART1_Init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, uart.o(.text.LPUART1_Init))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b]"></a>LPUART1_RxTx_IRQHandler</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, main.o(.text.LPUART1_RxTx_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = LPUART1_RxTx_IRQHandler &rArr; ParseUARTStringToTimeDate &rArr; MAX7219_DisplayDate &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseUARTStringToTimeDate
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>LPUART1_Transmit</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, uart.o(.text.LPUART1_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LPUART1_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_RxTx_IRQHandler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseUARTStringToTimeDate
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>LPUART_Clock_Setup</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, uart.o(.text.LPUART_Clock_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPUART_Clock_Setup &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>LPUART_Enable</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, uart.o(.text.LPUART_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LPUART_Enable &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>LPUART_Interrupt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, uart.o(.text.LPUART_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LPUART_Interrupt &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>LPUART_Pin_Setup</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, uart.o(.text.LPUART_Pin_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LPUART_Pin_Setup &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>LPUART_Set_BaudRate</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, uart.o(.text.LPUART_Set_BaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LPUART_Set_BaudRate &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>LPUART_Set_Frame</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, uart.o(.text.LPUART_Set_Frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LPUART_Set_Frame &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>MAX7219_ClearDisplay</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, max7219.o(.text.MAX7219_ClearDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MAX7219_ClearDisplay &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_display
</UL>

<P><STRONG><a name="[b9]"></a>MAX7219_DisplayDate</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, max7219.o(.text.MAX7219_DisplayDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MAX7219_DisplayDate &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseUARTStringToTimeDate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_display
</UL>

<P><STRONG><a name="[ba]"></a>MAX7219_DisplayTime</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, max7219.o(.text.MAX7219_DisplayTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MAX7219_DisplayTime &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseUARTStringToTimeDate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_display
</UL>

<P><STRONG><a name="[bb]"></a>MAX7219_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, max7219.o(.text.MAX7219_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MAX7219_Init &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>MAX7219_SendCommand</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, max7219.o(.text.MAX7219_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI0_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_DisplayDate
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_DisplayTime
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_ClearDisplay
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_Init
</UL>

<P><STRONG><a name="[bd]"></a>NVIC</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, main.o(.text.NVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = NVIC &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>PORTC_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, main.o(.text.PORTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PORTC_IRQHandler &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>ParseUARTStringToTimeDate</STRONG> (Thumb, 970 bytes, Stack size 408 bytes, main.o(.text.ParseUARTStringToTimeDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = ParseUARTStringToTimeDate &rArr; MAX7219_DisplayDate &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_DisplayDate
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_DisplayTime
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_RxTx_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>SetBit</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gpio.o(.text.SetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_IRQHandler
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Enable
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Interrupt
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Set_Frame
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Clock_Setup
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_SCG_SOSCCSR
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_SCG_SOSCCFG
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Pin_Setup
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingNVIC
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeDesiredSOSC
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetMode
</UL>

<P><STRONG><a name="[9e]"></a>SetSerialMutilBit</STRONG> (Thumb, 74 bytes, Stack size 28 bytes, gpio.o(.text.SetSerialMutilBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SetSerialMutilBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitSIRC
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI0_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI0_SetPins
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Set_BaudRate
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Clock_Setup
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_SCG_SOSCCFG
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Pin_Setup
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeDesiredSOSC
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Enable_Timer_Channel
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Configure_Channel
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Enable_Interrupt
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Set_Clock
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetMode
</UL>

<P><STRONG><a name="[c1]"></a>SettingNVIC</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, uart.o(.text.SettingNVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SettingNVIC &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_s32k144.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>UpdateDate</STRONG> (Thumb, 300 bytes, Stack size 4 bytes, main.o(.text.UpdateDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UpdateDate
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT0_Ch0_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>init_data_bss</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, startup.o(.text.init_data_bss))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = init_data_bss
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k144.o(.text)
</UL>
<P><STRONG><a name="[92]"></a>main</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = main &rArr; LPSPI0_Init &rArr; CLOCK_InitSIRC &rArr; SetSerialMutilBit
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI0_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI0_SetPins
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Enable
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Interrupt
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Set_Frame
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Set_BaudRate
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Clock_Setup
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_SCG_SOSCCSR
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_SCG_SOSCCFG
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Pin_Setup
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingNVIC
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_Transmit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeDesiredSOSC
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Enable_Timer_Channel
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Configure_Channel
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Set_Timer_Value
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Enable_Interrupt
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Set_Clock
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT_Set_NVIC
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetMode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a6]"></a>update_display</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, main.o(.text.update_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = update_display &rArr; MAX7219_DisplayDate &rArr; MAX7219_SendCommand &rArr; LPSPI0_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_DisplayDate
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_DisplayTime
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MAX7219_ClearDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPIT0_Ch0_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[f4]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[f5]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
